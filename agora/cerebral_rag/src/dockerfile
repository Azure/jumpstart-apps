# Dockerfile
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    #build-essential \
    libmagic1 \
    git-lfs \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements.txt first to leverage Docker cache
COPY requirements.txt /app/

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir huggingface-hub[cli]

# Create necessary directories
RUN mkdir -p /app/models/phi3 && \
    mkdir -p /app/documents && \
    mkdir -p /app/templates && \
    mkdir -p /app/cpu_and_mobile

# Download documents
RUN cd /app/documents && \
    wget -O "SmartShelf_Manual.pdf" "https://download.microsoft.com/download/2b3927e0-5342-4d84-8b55-ab958281259b/SmartShelf%20System%20User%20Manual%20for%20Contoso%20Hypermarket.pdf" && \
    wget -O "Scale_Manual.pdf" "https://download.microsoft.com/download/2b3927e0-5342-4d84-8b55-ab958281259b/Scale%20System%20User%20Manual%20for%20Contoso%20Hypermarket.pdf" && \
    wget -O "Refrigeration_Manual.pdf" "https://download.microsoft.com/download/2b3927e0-5342-4d84-8b55-ab958281259b/Refrigeration%20System%20User%20Manual%20for%20Contoso%20Hypermarket.pdf" && \
    wget -O "Checkout_Manual.pdf" "https://download.microsoft.com/download/2b3927e0-5342-4d84-8b55-ab958281259b/Automated%20Checkout%20System%20User%20Manual%20for%20Contoso%20Hypermarket.pdf" && \
    wget -O "HVAC_Manual.pdf" "https://download.microsoft.com/download/2b3927e0-5342-4d84-8b55-ab958281259b/HVAC%20System%20User%20Manual%20for%20Contoso%20Hypermarket.pdf"


# Download the model
RUN huggingface-cli download microsoft/Phi-3-mini-4k-instruct-onnx \
    --include "cpu_and_mobile/cpu-int4-rtn-block-32-acc-level-4/*" \
    --local-dir /app

COPY . /app

# Copy all application files
#COPY index.py .
#COPY slm.py .
COPY app_ws.py .
#COPY indexer.py .
COPY templates/ ./templates/
COPY docs/ ./documents/
#COPY cpu_and_mobile/ ./cpu_and_mobile/

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV CHROMA_HOST=chroma-db-service
ENV CHROMA_PORT=8040
ENV DOCUMENTS_PATH=/app/documents
ENV ONNX_MODEL_PATH=/app/cpu_and_mobile/cpu-int4-rtn-block-32-acc-level-4

# Make sure all directories have correct permissions
RUN chmod -R 755 /app

# Expose the port for the web interface
EXPOSE 8040

# Command to run the web application
CMD ["python", "app_ws.py", "-m", "cpu_and_mobile/cpu-int4-rtn-block-32-acc-level-4", "-p", "8040"]